name: Deploy API

on:
  push:
    branches: 
      - main
      - deployment
    paths:
      - 'src/**'
      - '.github/workflows/deploy-api.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore --configuration Release
      
      - name: Publish
        run: dotnet publish src/GalaxyWiki.API/GalaxyWiki.API.csproj -c Release -o ./publish
      
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
          
      - name: Add to known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
      
      - name: Configure app settings
        run: |
          cat > ./publish/appsettings.Production.json << EOF
          {
            "ConnectionStrings": {
              "DefaultConnection": "Host=${{ secrets.DB_HOST }};Port=${{ secrets.DB_PORT }};Database=${{ secrets.DB_NAME }};Username=${{ secrets.DB_USERNAME }};Password=${{ secrets.DB_PASSWORD }};"
            },
            "Logging": {
              "LogLevel": {
                "Default": "Information",
                "Microsoft.AspNetCore": "Warning"
              }
            }
          }
          EOF
      
      - name: Create service file locally
        run: |
          cat > galaxywiki-api.service << EOF
          [Unit]
          Description=GalaxyWiki API
          After=network.target

          [Service]
          WorkingDirectory=/var/www/galaxywiki
          ExecStart=/usr/bin/dotnet /var/www/galaxywiki/GalaxyWiki.API.dll
          Restart=always
          RestartSec=10
          SyslogIdentifier=galaxywiki-api
          User=ec2-user
          Environment=ASPNETCORE_ENVIRONMENT=Production
          Environment=DOTNET_PRINT_TELEMETRY_MESSAGE=false

          [Install]
          WantedBy=multi-user.target
          EOF
      
      - name: Deploy to EC2
        run: |
          # Ensure directory exists
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'mkdir -p /var/www/galaxywiki'
          
          # Copy files
          rsync -avz --delete ./publish/ ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/var/www/galaxywiki/
          
          # Ensure permissions
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'sudo chown -R ec2-user:ec2-user /var/www/galaxywiki'
          
          # Copy and install the service file
          scp galaxywiki-api.service ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/galaxywiki-api.service
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'sudo mv ~/galaxywiki-api.service /etc/systemd/system/ && sudo systemctl daemon-reload'
          
          # Restart service
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'sudo systemctl restart galaxywiki-api || sudo systemctl start galaxywiki-api'
          
          # Enable service on boot
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'sudo systemctl enable galaxywiki-api'
          
          # Check status
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'sudo systemctl status galaxywiki-api' 